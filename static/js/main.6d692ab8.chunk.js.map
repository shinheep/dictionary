{"version":3,"sources":["components/Dictionary.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Dictionary","useState","results","setResults","wordSearch","useRef","console","log","definition","map","word","index","className","type","placeholder","ref","onClick","event","input","preventDefault","current","value","fetch","then","res","json","data","meanings","definitions","catch","err","Footer","class","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA0DeA,EAxDI,WAEf,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KAWMC,EAAaC,mBAQnBC,QAAQC,IAAIL,GAEZ,IAAMM,EAAaN,GAAWA,EAAQO,KAAI,SAACC,EAAMC,GAC7C,OACI,qBAAiBC,UAAU,mBAA3B,SACKF,EAAKF,YADAG,MAMlB,OACI,sBAAKC,UAAU,aAAf,UAEI,oBAAIA,UAAU,QAAd,wBAEA,qBAAKA,UAAU,gBAAf,SACI,uBAAMA,UAAU,YAAhB,UACI,uBACIA,UAAU,SACVC,KAAK,SACLC,YAAY,gBACZC,IAAKX,IAET,wBAAQY,QA7BH,SAACC,GAXF,IAACC,EAYjBD,EAAME,iBAZWD,EAaLd,EAAWgB,QAAQC,MAZ/BC,MAAM,mDAAD,OAAoDJ,IACxDK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHvB,EAAWuB,EAAK,GAAGC,SAAS,GAAGC,gBAElCC,OAAM,SAACC,GAAD,OAASxB,QAAQC,IAAIuB,OAkChB,yBAIR,qBAAKlB,UAAU,gBAAf,SACKJ,QCxCFuB,EAXA,WACX,OACI,sBAAKnB,UAAU,SAAf,UACI,4DACA,qBAAKA,UAAU,UAAf,SAAyB,mBAAGoB,MAAM,sBAClC,qBAAKpB,UAAU,UAAf,SAAyB,mBAAGoB,MAAM,oBAClC,qBAAKpB,UAAU,UAAf,SAAyB,mBAAGoB,MAAM,gCCO/BC,MATf,WACE,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.6d692ab8.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\n\nconst Dictionary = () => {\n    \n    const [results, setResults] = useState()\n\n    const makeApiCall = (input) => {\n        fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${input}`)\n        .then((res) => res.json())\n        .then((data) => {\n            setResults(data[0].meanings[0].definitions)\n        })\n        .catch((err) => console.log(err))\n    }\n\n    const wordSearch = useRef()\n\n    const handleSearch = (event) => {\n        event.preventDefault()\n        makeApiCall(wordSearch.current.value)\n        // wordSearch.current.value=''\n    }\n\n    console.log(results)\n\n    const definition = results && results.map((word, index) => {\n        return (\n            <div key={index} className=\"displayedResults\">\n                {word.definition}\n            </div>\n        )\n    })\n\n    return (\n        <div className=\"dictionary\">\n            \n            <h1 className=\"title\">Dictionary</h1>\n            \n            <div className=\"formContainer\">\n                <form className=\"searchBox\">\n                    <input\n                        className=\"search\"\n                        type=\"search\"\n                        placeholder=\"Search a word\"\n                        ref={wordSearch}\n                    />\n                    <button onClick={handleSearch}>Search</button>\n                </form>\n            </div>\n\n            <div className=\"definitionBox\">\n                {definition}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Dictionary;","const Footer = () => {\n    return (\n        <div className=\"footer\">\n            <footer>Â© 2021 Shinhee Park</footer>\n            <div className=\"socials\"><i class=\"fab fa-linkedin\"></i></div>\n            <div className=\"socials\"><i class=\"fab fa-github\"></i></div>\n            <div className=\"socials\"><i class=\"fab fa-twitter-square\"></i></div>\n        </div>\n    );\n};\n\nexport default Footer;","import './App.css';\nimport Dictionary from './components/Dictionary';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dictionary/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}